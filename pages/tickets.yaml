id: tickets
type: PageHeaderMenu
properties:
  title: Tickets
  content:
    style:
      background: '#f5f5f5'
layout:
  contentGutter: 16

events:
  onEnter:
    _ref: actions/onEnter.yaml
  onEnterAsync:
    _ref: actions/onEnterAsync.yaml

requests:
  # Requests and actions are written in the requests/actions directories and referenced
  # to make the files easier to read.
  # They could also be used on multiple pages then.
  - _ref: requests/change_status_on_ticket.yaml
  - _ref: requests/close_ticket.yaml
  - _ref: requests/comment_on_ticket.yaml
  - _ref: requests/escalate_ticket.yaml
  - _ref: requests/fetch_tickets.yaml
  - _ref: requests/fetch_selected.yaml
  - _ref: requests/set_flagged.yaml

areas:
  header:
    blocks:
      - id: affix
        type: Affix
        blocks:
          - id: source_button
            type: Button
            properties:
              icon: GithubOutlined
              title: View App Source Code
              type: default
              shape: round
            events:
              onClick:
                - id: link_repo
                  type: Link
                  params:
                    url: https://github.com/lowdefy/lowdefy-example-case-management
                    newTab: true

blocks:
  #   # This box contains the search box and list of tickets on the rhs of the screen
  - id: list_box
    type: Box
    layout:
      span: 10
      contentGutter: 6
    blocks:
      - id: open_title
        type: Markdown
        loading:
          type: SkeletonParagraph
          properties:
            lines: 1
        properties:
          content: '###### Tickets'
      - id: search_box
        type: Box
        layout:
          contentGutter: 6
        blocks:
          - id: search_input
            type: TextInput
            layout:
              flex: 1 1 auto
            properties:
              disabled:
                # Logical tests that are used often are also referenced
                # The inputs should be disabled when the tickets loading, so the user can only make one request at a time
                # A loading state is set by the fetch_tickets action, that is used to determine if he tickets are loading
                _ref: logic/tickets_loading.yaml
              placeholder: Search
              label:
                disabled: true
            events:
              onPressEnter:
                # Fetch the tickets when enter is pressed and the text input is focused
                _ref: actions/fetch_tickets.yaml
          - id: search_button
            type: Button
            layout:
              flex: 0 1 auto
            properties:
              disabled:
                _ref: logic/tickets_loading.yaml
              title: Search
              icon: SearchOutlined
            events:
              onClick:
                _ref: actions/fetch_tickets.yaml
      - id: status_selector
        type: Selector
        layout:
          span: 6
        properties:
          disabled:
            _ref: logic/tickets_loading.yaml
          label:
            disabled: true
          placeholder: Status
          options:
            _global: statuses
          size: small
        events:
          onChange:
            _ref: actions/fetch_tickets.yaml
      - id: type_selector
        type: Selector
        layout:
          span: 6
        properties:
          disabled:
            _ref: logic/tickets_loading.yaml
          label:
            disabled: true
          placeholder: Type
          options:
            - Invoices
            - Late Delivery
            - Return Deposit
            - Other
          size: small
        events:
          onChange:
            _ref: actions/fetch_tickets.yaml
      - id: open_closed_selector
        type: Selector
        layout:
          span: 6
        properties:
          allowClear: false
          disabled:
            _ref: logic/tickets_loading.yaml
          label:
            disabled: true
          options:
            - Open
            - Closed
          size: small
        events:
          onChange:
            _ref: actions/fetch_tickets.yaml
      - id: flagged_selector
        type: CheckboxSelector
        layout:
          span: 6
        properties:
          disabled:
            _ref: logic/tickets_loading.yaml
          label:
            disabled: true
          options:
            - Only flagged
        events:
          onChange:
            _ref: actions/fetch_tickets.yaml
      - id: open_card
        type: Card
        style:
          marginTop: 4
        blocks:
          # This Skeleton is shown when the tickets are loading
          - id: tickets_skeleton
            type: Skeleton
            visible:
              _ref: logic/tickets_loading.yaml
            properties:
              active: true
          # This is shown when the tickets request does not return any tickets
          - id: no_tickets
            type: Result
            visible:
              _ref: logic/no_tickets.yaml
            properties:
              icon:
                name: ContainerTwoTone
                color: '#bfbfbf'
              subTitle: No tickets found
          # A list to display the list of tickets
          - id: tickets_list
            type: List
            visible:
              _not:
                _ref: logic/tickets_loading.yaml
            blocks:
              # This box is here so we can add a onClick event if the user clicks anywhere on the ticket
              # All ids of blocks that are part of the tickets list start with "tickets_list.$."
              - id: tickets_list.$.box
                type: Box
                events:
                  onClick:
                    _ref: actions/fetch_selected.yaml
                blocks:
                  # A box to contain the header line of the ticket display
                  # The items inside are laid out using flex properties
                  # The status icon, status text and flagged icon all have grow 0, shrink 1 and size auto
                  # They will try to occupy space they size they naturally are, and shrink if possible.
                  # The ticket id has grow 1, shrink 1 and size auto.
                  # It will expand to take up as much space as possible , pushing the flag icon to the right
                  # This pattern is useful when creating a row of objects that should be aligned
                  # to both the lhs and rhs of the row
                  - id: tickets_list.$.header_box
                    type: Box
                    layout:
                      contentAlign: middle
                      contentGutter: 16
                    blocks:
                      - id: tickets_list.$.status_icon
                        type: Icon
                        layout:
                          flex: 0 1 auto
                        properties:
                          size: 12
                          color:
                            # Use the _get operator to get the correct icon name and color from the global maps
                            _get:
                              from:
                                _global: statusColors
                              key:
                                _state: tickets_list.$.status
                          name:
                            _get:
                              from:
                                _global: statusIcons
                              key:
                                _state: tickets_list.$.status
                      - id: tickets_list.$.status
                        type: Html
                        layout:
                          flex: 0 1 auto
                        properties:
                          html:
                            _nunjucks:
                              template: |
                                <font style='font-size:12px' >
                                  {{ status }}
                                </font>
                              on:
                                _state: tickets_list.$
                      - id: tickets_list.$.ticket_id
                        type: Html
                        layout:
                          flex: 1 1 auto
                        properties:
                          html:
                            _nunjucks:
                              template: |
                                <font style='font-size:14px' >
                                  <b>#{{ ticket_id }}</b>
                                </font>
                              on:
                                _state: tickets_list.$
                      - id: tickets_list.$.flag
                        type: Icon
                        layout:
                          flex: 0 1 auto
                        properties:
                          size: 12
                          name: FlagTwoTone
                          color:
                            _if:
                              test:
                                _eq:
                                  - _state: tickets_list.$.flagged
                                  - true
                              then: '#f5222d'
                              else: '#bfbfbf'
                  - id: tickets_list.$.description
                    type: Html
                    properties:
                      html:
                        _nunjucks:
                          template: |
                            <p>
                              <font style='font-size:14px' >
                                  <b>{{ company }}</b>
                              </font>
                              <font style='font-size:12px' >
                                {{ name }}
                              </font>
                            </p>
                            <font style="font-size: 10px;" ><i>Created: {{ created_date | date("lll") }} {{ created_user.name }}</i></font>
                          on:
                            _state: tickets_list.$
                  - id: tickets_list.$.divider
                    type: Divider
                    visible:
                      # Hide the divider if the item is the last in the list
                      _not:
                        _eq:
                          - _sum:
                              - _index: 0
                              - 1
                          - _array.length:
                              _state: tickets_list

  # This box contains the ticket description on the rhs of the screen.
  - id: selected_box
    type: Box
    layout:
      span: 14
    blocks:
      - id: selected.title
        type: Markdown
        loading:
          type: SkeletonParagraph
          properties:
            lines: 1
        properties:
          content: '###### Selected'
      - id: selected.card
        type: Card
        style:
          marginTop: 4
        blocks:
          - id: selected.skeleton
            type: Skeleton
            visible:
              _ref: logic/selected_loading.yaml
            properties:
              active: true
          - id: selected.not_selected
            type: Result
            visible:
              _ref: logic/no_selected.yaml
            properties:
              icon:
                name: ContainerTwoTone
                color: '#bfbfbf'
              subTitle: No ticket selected
          - id: selected.visible_box
            type: Box
            visible:
              _ref: logic/ticket_selected.yaml
            layout:
              contentGutter: 16
            blocks:
              - id: selected.header_box
                type: Box
                layout:
                  contentAlign: middle
                  contentGutter: 16
                blocks:
                  - id: selected.status_icon
                    type: Icon
                    layout:
                      flex: 0 1 auto
                    properties:
                      size: 32
                      color:
                        _get:
                          from:
                            _global: statusColors
                          key:
                            _state: selected.status
                      name:
                        _get:
                          from:
                            _global: statusIcons
                          key:
                            _state: selected.status
                  - id: selected.status
                    type: Html
                    layout:
                      flex: 0 1 auto
                    properties:
                      html:
                        _nunjucks:
                          template: |
                            <span>
                              {{ status }}
                            </span>
                          on:
                            _state: selected
                  - id: selected.ticket_id
                    type: Html
                    layout:
                      flex: 1 1 auto
                    properties:
                      html:
                        _nunjucks:
                          template: |
                            <font style='font-size:24px' >
                              <b>#{{ ticket_id }}</b>
                            </font>
                          on:
                            _state: selected
                  - id: selected.flag
                    type: Icon
                    layout:
                      flex: 0 1 auto
                    properties:
                      size: 32
                      name: FlagTwoTone
                      color:
                        _if:
                          test:
                            _eq:
                              - _state: selected.flagged
                              - true
                          then: '#f5222d'
                          else: '#bfbfbf'
                    events:
                      onClick:
                        _ref: actions/set_flagged.yaml
              - id: selected.actions_box
                type: Box
                layout:
                  contentGutter: 8
                blocks:
                  - id: selected.change_status_button
                    type: Button
                    layout:
                      flex: 1 1 auto
                    properties:
                      title: Change Status
                      block: true
                      type: default
                      icon: RetweetOutlined
                    events:
                      onClick:
                        - id: open_change_status_modal
                          type: CallMethod
                          params:
                            blockId: selected.change_status_modal
                            method: toggleOpen
                  - id: selected.comment_button
                    type: Button
                    layout:
                      flex: 1 1 auto
                    properties:
                      title: Comment
                      block: true
                      type: default
                      icon: MessageOutlined
                    events:
                      onClick:
                        - id: open_comment_modal
                          type: CallMethod
                          params:
                            blockId: selected.comment_modal
                            method: toggleOpen
                  - id: selected.escalate_button
                    type: Button
                    layout:
                      flex: 1 1 auto
                    properties:
                      title: Escalate
                      block: true
                      type: default
                      icon: ExclamationCircleOutlined
                    events:
                      onClick:
                        - id: open_escalate_modal
                          type: CallMethod
                          params:
                            blockId: selected.escalate_modal
                            method: toggleOpen
                  - id: selected.close_button
                    type: Button
                    layout:
                      flex: 1 1 auto
                    properties:
                      disabled:
                        _eq:
                          - _state: selected.status
                          - Closed
                      title: Close
                      block: true
                      type: default
                      icon: StopOutlined
                    events:
                      onClick:
                        - id: open_confirm_close_modal
                          type: CallMethod
                          params:
                            blockId: selected.confirm_close_modal
                            method: toggleOpen
              - id: selected.description_box
                type: Box
                layout:
                  contentGutter: 42
                blocks:
                  - id: selected.descriptions
                    type: Descriptions
                    layout:
                      span: 12
                    properties:
                      bordered: true
                      column: 1
                      size: small
                      items:
                        - label: Name
                          value:
                            _state: selected.name
                        - label: Company
                          value:
                            _state: selected.company
                        - label: Phone
                          value:
                            _state: selected.phone
                  # These values are created randomly when the ticket is created
                  # The could have been looked up from some customer data though
                  - id: selected.satisfaction_box
                    type: Box
                    layout:
                      span: 12
                      contentJustify: center
                      contentGutter: 4
                    blocks:
                      - id: selected.satisfaction_title
                        type: Markdown
                        properties:
                          content: '###### Satisfaction score'
                      - id: selected.satisfaction_score
                        type: Progress
                        properties:
                          showInfo: true
                          percent:
                            _state: selected.satisfaction_score
                          strokeColor:
                            from: '#faad14'
                            to: '#52c41a'
                      - id: selected.satisfaction_title
                        type: Markdown
                        properties:
                          content: '###### Past orders'
                      - id: selected.past_orders
                        type: Statistic
                        properties:
                          suffixIcon: ShoppingCartOutlined
                          value:
                            _state: selected.past_orders
                  - id: selected.ticket_description
                    type: Markdown
                    style:
                      '.markdown-body':
                        fontSize: 14
                    properties:
                      content:
                        _nunjucks:
                          template: |
                            {{ ticket_description }}
                          on:
                            _state: selected

                  - id: selected.history
                    type: TimelineList
                    properties:
                      data:
                        _mql.aggregate:
                          pipeline:
                            - $addFields:
                                icons:
                                  $objectToArray:
                                    _global: actionIcons
                                colors:
                                  $objectToArray:
                                    _global: actionColors
                            - $project:
                                icon:
                                  name:
                                    $arrayElemAt:
                                      - $icons.v
                                      - $indexOfArray:
                                          - $icons.k
                                          - $action
                                  color:
                                    $arrayElemAt:
                                      - $colors.v
                                      - $indexOfArray:
                                          - $colors.k
                                          - $action
                          on:
                            _state: selected.history

                    blocks:
                      - id: selected.history.$.description
                        type: Html
                        style:
                          fontSize: 12
                        properties:
                          html:
                            _nunjucks:
                              template: |
                                <h3> {{ action }} </h3>
                                <p style="font-size: 10px;" ><i>{{ timestamp | date("lll") }}</i></p>
                                <p>{{ comment }}</p>
                              on:
                                _state: selected.history.$

  # Modals that are opened by the action buttons
  - id: selected.change_status_modal
    type: Modal
    properties:
      okText: Change Status
      title: Change Status
    events:
      onOk:
        - id: validate
          type: Validate
          messages:
            error: A status is required.
          params: selected.change_status_selector
        - id: change_status_on_ticket
          type: Request
          params: change_status_on_ticket
        - id: refresh
          type: Request
          params:
            - fetch_tickets
            - fetch_selected
        - id: set_state
          type: SetState
          params:
            selected:
              _request: fetch_selected.0
            tickets_list:
              _request: fetch_tickets
    blocks:
      - id: selected.change_status_selector
        type: Selector
        required: true
        properties:
          title: New Status
          options:
            _global: statuses
      - id: selected.change_status_comment
        type: TextArea
        properties:
          title: comment
  - id: selected.comment_modal
    type: Modal
    properties:
      okText: Save
      title: Comment
    events:
      onOk:
        - id: validate
          type: Validate
          messages:
            error: A comment is required.
          params: selected.comment_input
        - id: comment_on_ticket
          type: Request
          params: comment_on_ticket
        - id: refresh
          type: Request
          params:
            - fetch_tickets
            - fetch_selected
        - id: set_state
          type: SetState
          params:
            selected:
              _request: fetch_selected.0
            tickets_list:
              _request: fetch_tickets
    blocks:
      - id: selected.comment_input
        type: TextArea
        required: true
        properties:
          label:
            disabled: true
  - id: selected.escalate_modal
    type: Modal
    properties:
      okText: Escalate
      title: Escalate ticket
    events:
      onOk:
        - id: validate
          type: Validate
          messages:
            error: A comment is required.
          params: selected.escalate_comment
        - id: escalate_ticket
          type: Request
          params: escalate_ticket
        - id: refresh
          type: Request
          params:
            - fetch_tickets
            - fetch_selected
        - id: set_state
          type: SetState
          params:
            selected:
              _request: fetch_selected.0
            tickets_list:
              _request: fetch_tickets
    blocks:
      - id: selected.escalate_comment
        type: TextArea
        required: true
        properties:
          title: comment
  - id: selected.confirm_close_modal
    type: Modal
    properties:
      okButtonProps:
        danger: true
      okText: Close
    events:
      onOk:
        - id: close_ticket
          type: Request
          params: close_ticket
        - id: reset_selected
          type: SetState
          params:
            selected_id: null
            selected: {}
        - id: refresh
          type: Request
          params:
            - fetch_tickets
        - id: set_tickets
          type: SetState
          params:
            tickets_list:
              _request: fetch_tickets
    blocks:
      - id: selected.confirm_close_modal_text
        type: Markdown
        properties:
          content: '#### Are you sure you want to close this issue?'
